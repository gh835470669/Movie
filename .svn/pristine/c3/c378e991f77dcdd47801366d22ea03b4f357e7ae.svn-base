package com.luwei.hackvr.controller;

import java.io.File;
import java.io.IOException;
import java.lang.ProcessBuilder.Redirect;
import java.net.InetAddress;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.collections.functors.TruePredicate;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.HtmlUtils;

import com.luwei.hackvr.pojo.Article;
import com.luwei.hackvr.pojo.Kuaixun;
import com.luwei.hackvr.pojo.Video;
import com.luwei.hackvr.service.ArticleService;
import com.luwei.hackvr.service.KuaixunService;
import com.luwei.hackvr.service.ToutiaoService;
import com.luwei.hackvr.service.VideoService;
import com.luwei.hackvr.serviceImpl.VideoServiceImpl;
import com.luwei.hackvr.utils.CheckMobile;
import com.luwei.hackvr.utils.HtmlUtil;
import com.luwei.hackvr.utils.QRCodeUtil;
import com.luwei.hackvr.utils.VideoTypeTrans;

@Controller
public class LoadController {
    private static Logger logger = Logger.getLogger(LoadController.class);
    
//    String serverName = "103.224.81.114";
    
    @Autowired
    private ArticleService articleService;
    @Autowired
    private KuaixunService kuaixunService;
    @Autowired
    private ToutiaoService toutiaoService;
    @Autowired
    private VideoService videoService;
    
    @RequestMapping(value = "load")
    public String load(
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            if (check(request, response)) {
                return "redirect:/load/zixun.do";
            } else {
                List<Article> articles = articleService.getLateArticles(0, 5);
                List<Map<String, Object>> shouyeToutiaos = articleService.getShouyeToutiaoArticles(3);
                List<Video> shipinToutiaos = videoService.getLateVideos(0, 8);

                request.setAttribute("firstFlag", "no");
                if (articles != null && shouyeToutiaos != null) {
                    request.setAttribute("articles", articles);
                    request.setAttribute("shouyeToutiaos", shouyeToutiaos);
                    request.setAttribute("shipinToutiaos", shipinToutiaos);
                    return "index";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            }

        } catch (Exception e) {
            logger.error("加载主页异常", e);
            model.addAttribute("errorMessage", "加载主页异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "flash")
    public String flash (
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            if (check(request, response)) {
                List<List<Kuaixun>> kuaixunSet = kuaixunService.getDayKuaixunsByNum(0, 5);
                if (kuaixunSet != null) {
                    request.setAttribute("kuaixunSet", kuaixunSet);
                    return "jsp/mobile/flash_wap";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            } else {
//              TODO
//                List<Article> remenToutiaos = articleService.getRemenToutiaoArticles();
                List<Article> remenToutiaos = articleService.getLateArticles(30, 6);
                List<List<Kuaixun>> kuaixunSet = kuaixunService.getDayKuaixunsByNum(0, 5);
                
                if (remenToutiaos != null && kuaixunSet != null) {
                    request.setAttribute("remenToutiaos", remenToutiaos);
                    request.setAttribute("kuaixunSet", kuaixunSet);
                    return "jsp/flash";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }

            }
        } catch (Exception e) {
            logger.error("加载快讯页面异常", e);
            model.addAttribute("errorMessage", "加载快讯页面异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "zixun")
    public String zixun (
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            if (check(request, response)) {
                List<Article> articles = articleService.getLateArticles(0, 8);
                List<Map<String, Object>> zixunToutios = articleService.getZixunToutiaoArticles(3);
                if (articles != null) {
                    request.setAttribute("articles", articles);
                    request.setAttribute("zixunToutios", zixunToutios);
                    return "jsp/mobile/information_wap";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            } else {
                List<Article> articles = articleService.getLateArticles(0, 8);
                List<Map<String, Object>> zixunToutios = articleService.getZixunToutiaoArticles(3);
//              TODO
//              List<Article> remenToutiaos = articleService.getRemenToutiaoArticles();
                List<Article> remenToutiaos = articleService.getLateArticles(30, 6);
                Map<String, Object> shixunToutiao = articleService.getShixunToutiaoArticle();
                Map<String, Object> guanchaToutiao = articleService.getGuanchaToutiaoArticle();
                Map<String, Object> yingshiToutiao = articleService.getYingshiToutiaoArticle();
                Map<String, Object> youxiToutiao = articleService.getYouxiToutiaoArticle();
                List<Kuaixun> kuaixuns = kuaixunService.getLateKuaixuns(0, 5);
                
                if (articles != null && zixunToutios != null && remenToutiaos != null &&
                        shixunToutiao != null && guanchaToutiao != null && yingshiToutiao != null &&
                        youxiToutiao != null && kuaixuns != null) {
                    request.setAttribute("articles", articles);
                    request.setAttribute("zixunToutios", zixunToutios);
                    request.setAttribute("remenToutiaos", remenToutiaos);
                    request.setAttribute("shixunToutiao", shixunToutiao);
                    request.setAttribute("guanchaToutiao", guanchaToutiao);
                    request.setAttribute("yingshiToutiao", yingshiToutiao);
                    request.setAttribute("youxiToutiao", youxiToutiao);
                    request.setAttribute("kuaixuns", kuaixuns);
                    return "jsp/information";
                    
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            }

        } catch (Exception e) {
            logger.error("加载资讯页面异常", e);
            model.addAttribute("errorMessage", "加载资讯页面异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "type")
    public String type (
            @RequestParam(value = "type", required = true) Byte typeString,
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            if (check(request, response)) {
                Map<String, Object> article = new HashMap<String, Object>();
                if (typeString == 1) {
                    article = articleService.getShixunToutiaoArticle();
                } else if (typeString == 2) {
                    article = articleService.getGuanchaToutiaoArticle();
                } else if (typeString == 3) {
                    article = articleService.getYouxiToutiaoArticle();
                } else if (typeString == 4) {
                    article = articleService.getYingshiToutiaoArticle();
                }
                List<Article> articles = articleService.getLateArticles(0, 8, typeString);
                
                if (article != null && articles != null) {
                    request.setAttribute("type", typeString);
                    request.setAttribute("article", article);
                    request.setAttribute("articles", articles);
                    return "jsp/mobile/news_wap";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            } else {
                List<Article> articles = articleService.getLateArticles(0, 8, typeString);
//              TODO
//              List<Article> remenToutiaos = articleService.getRemenToutiaoArticles();
                List<Article> remenToutiaos = articleService.getLateArticles(30, 6);
                if (articles != null && remenToutiaos != null) {
                    request.setAttribute("type", typeString);
                    request.setAttribute("articles", articles);
                    request.setAttribute("remenToutiaos", remenToutiaos); 
                    return "jsp/news";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            }

        } catch (Exception e) {
            logger.error("加载类型页面异常", e);
            model.addAttribute("errorMessage", "加载类型页面异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "article")
    public String article (
            @RequestParam(value = "articleId", required = true) int articleId,
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            if (check(request, response)) {
                Article article = articleService.getArticleById(articleId);
                
                article.setContent(HtmlUtil.insertClassToPTagWithImgTag(article.getContent(), "class='article-wap-img'", "class='font-size-1'"));
                
//              TODO
                List<Article> xiangguanArticles = articleService.getLateArticles(30, 6);
                if (article != null && xiangguanArticles != null) {
                    request.setAttribute("article", article);
                    // TODO 相关文章
                    request.setAttribute("xiangguanArticles", xiangguanArticles);
                    return "jsp/mobile/article_wap";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }
            } else {
                String qrcodeUrlString = request.getRealPath("/qrcode/article") + "/" + articleId +".jpg";;
//                String qrcodeUrlString = "E:/Abinlian/qrcode/article/" + articleId +".jpg";
                File file=new File(qrcodeUrlString);    
                if(!file.exists()) {
//                    String url = request.getScheme() +"://" + serverName
//                            + ":" + request.getServerPort() + request.getContextPath()
//                            + request.getServletPath();
                    String url = request.getScheme() +"://" + request.getServerName()
                            + request.getServletPath();
                    if (request.getQueryString() != null){
                        url += "?" + request.getQueryString();
                    }
                    QRCodeUtil.encode(url, "", request.getRealPath("/qrcode/article") + "/", true, articleId +".jpg");
                }
                Article article = articleService.getArticleById(articleId);
//              TODO
//              List<Article> remenToutiaos = articleService.getRemenToutiaoArticles();
                List<Article> remenToutiaos = articleService.getLateArticles(30, 6);
                List<Article> xiangguanArticles = articleService.getLateArticles(0, 6, article.getType());
                if (article != null && remenToutiaos != null && xiangguanArticles != null) {
                    request.setAttribute("qrcode", "./qrcode/article/" + articleId +".jpg");
                    request.setAttribute("article", article);
                    request.setAttribute("remenToutiaos", remenToutiaos);
                    // TODO 相关文章
                    request.setAttribute("xiangguanArticles", xiangguanArticles);
                    return "jsp/article";
                } else {
                    model.addAttribute("errorMessage", "文章资源加载异常");
                    return "index";
                }

            }
        } catch (Exception e) {
            logger.error("加载文章页面异常", e);
            model.addAttribute("errorMessage", "加载文章页面异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "comming")
    public String comming (
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            return "jsp/comming";
        } catch (Exception e) {
            logger.error("加载主页异常", e);
            model.addAttribute("errorMessage", "加载类型页面异常");
            return "jsp/comming";
        }
    }
    

    @RequestMapping(value = "video")
    public String video (
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
//            TODO
//            List<List<Map<String, Object>>> shipinToutiaoSet = videoService.getShipinToutiaoVideos(8);
            List<List<Map<String, Object>>> shipinToutiaoSet = videoService.getLateVideos(16);
            List<List<Map<String, Object>>> remenShipinSet = videoService.getRemenShipinVideos(16);
            List<Video> tiyanVideos = videoService.getLateVideos(0, 4, 0);
            List<Video> shishangVideos = videoService.getLateVideos(0, 4, 1);
            List<Video> yuleVideos = videoService.getLateVideos(0, 4, 2);
            List<Video> fengguangVideos = videoService.getLateVideos(0, 4, 3);
            List<Video> kejiVideos = videoService.getLateVideos(0, 4, 4);
            List<Video> shenghuoVideos = videoService.getLateVideos(0, 4, 5);
            List<Video> shehuiVideos = videoService.getLateVideos(0, 4, 6);
            
//            if (shipinToutiaoSet != null && remenShipinSet != null && tiyanVideos != null && shishangVideos != null
//                    && yuleVideos != null && fengguangVideos != null && kejiVideos != null && shenghuoVideos != null
//                    && shehuiVideos != null && fengguangVideos != null) {
                request.setAttribute("shipinToutiaoSet", shipinToutiaoSet);
                request.setAttribute("remenShipinSet", remenShipinSet);
                request.setAttribute("tiyanVideos", tiyanVideos);
                request.setAttribute("shishangVideos", shishangVideos);
                request.setAttribute("yuleVideos", yuleVideos);
                request.setAttribute("fengguangVideos", fengguangVideos);
                request.setAttribute("kejiVideos", kejiVideos);
                request.setAttribute("shenghuoVideos", shenghuoVideos);
                request.setAttribute("shehuiVideos", shehuiVideos);
                return "jsp/video";
                
//            } else {
//                model.addAttribute("errorMessage", "视频资源加载异常");
//                return "index";
//            }

        } catch (Exception e) {
            logger.error("加载视频页面异常", e);
            model.addAttribute("errorMessage", "加载视频页面异常");
            return "index";
        }
    }
    

    @RequestMapping(value = "videoclass")
    public String videoclass (
            @RequestParam(value = "type", required = true) int type,
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            List<Video> videos = videoService.getLateVideos(0, 16, type);
            
//            if (tiyanVideos != null && shishangVideos != null
//                    && yuleVideos != null && fengguangVideos != null && kejiVideos != null && shenghuoVideos != null
//                    && shehuiVideos != null && fengguangVideos != null) {
                request.setAttribute("type", type);
                request.setAttribute("videos", videos);
                return "jsp/videoclass";
                
//            } else {
//                model.addAttribute("errorMessage", "视频资源加载异常");
//                return "index";
//            }

        } catch (Exception e) {
            logger.error("加载视频页面异常", e);
            model.addAttribute("errorMessage", "加载视频页面异常");
            return "index";
        }
    }
    
    @RequestMapping(value = "videoplay")
    public String videoplay (
            @RequestParam(value = "id", required = true) int id,
            HttpServletRequest request, HttpServletResponse response, Model model) throws IOException {
        try {
            Video video = videoService.getVideoById(id);
            List<Video> videos = videoService.getLateVideos(0, 5, VideoTypeTrans.storeToDisplay(video.getType()));
            
//            if (video != null && videos != null) {
                request.setAttribute("video", video);
                request.setAttribute("videos", videos);
                return "jsp/videoplay";
                
//            } else {
//                model.addAttribute("errorMessage", "视频资源加载异常");
//                return "index";
//            }

        } catch (Exception e) {
            logger.error("加载视频页面异常", e);
            model.addAttribute("errorMessage", "加载视频页面异常");
            return "index";
        }
    }
    
    private boolean check(HttpServletRequest request, HttpServletResponse response) throws IOException{  
        boolean isFromMobile=false;  
          
//        HttpSession session= request.getSession();  
       //检查是否已经记录访问方式（移动端或pc端）  
//        if(null==session.getAttribute("ua")){  
            try{  
                //获取ua，用来判断是否为移动端访问  
                String userAgent = request.getHeader( "USER-AGENT" ).toLowerCase();    
                if(null == userAgent){    
                    userAgent = "";    
                }  
                isFromMobile = CheckMobile.check(userAgent);  
                //判断是否为移动端访问  
//                if(isFromMobile){  
////                    System.out.println("移动端访问");  
//                    session.setAttribute("ua","mobile");  
//                } else {  
////                    System.out.println("pc端访问");  
//                    session.setAttribute("ua","pc");  
//                }  
            }catch(Exception e){}  
//        }else{  
//            isFromMobile=session.getAttribute("ua").equals("mobile");  
//        }  
          
        return isFromMobile;  
    }
    
}
