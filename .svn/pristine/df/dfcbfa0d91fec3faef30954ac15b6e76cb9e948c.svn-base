/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _public = __webpack_require__(1);

	var _public2 = _interopRequireDefault(_public);

	var _logo2 = __webpack_require__(5);

	var _logo3 = _interopRequireDefault(_logo2);

	var _nav2 = __webpack_require__(8);

	var _nav3 = _interopRequireDefault(_nav2);

	var _slider2 = __webpack_require__(10);

	var _slider3 = _interopRequireDefault(_slider2);

	var _image_text_list2 = __webpack_require__(12);

	var _image_text_list3 = _interopRequireDefault(_image_text_list2);

	var _time_list2 = __webpack_require__(14);

	var _time_list3 = _interopRequireDefault(_time_list2);

	var _article2 = __webpack_require__(16);

	var _article3 = _interopRequireDefault(_article2);

	var _share2 = __webpack_require__(18);

	var _share3 = _interopRequireDefault(_share2);

	var _article_more2 = __webpack_require__(20);

	var _article_more3 = _interopRequireDefault(_article_more2);

	var _init_rem = __webpack_require__(22);

	var _init_rem2 = _interopRequireDefault(_init_rem);

	var _search2 = __webpack_require__(23);

	var _search3 = _interopRequireDefault(_search2);

	var _slider4 = __webpack_require__(25);

	var _slider5 = _interopRequireDefault(_slider4);

	var _load_more2 = __webpack_require__(26);

	var _load_more3 = _interopRequireDefault(_load_more2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var initRem = new _init_rem2.default(); // 初始化rem

	// 初始化rem
	initRem.init(); // 初始化rem
	(0, _search3.default)();
	(0, _load_more3.default)();
	(0, _slider5.default)();

/***/ },
/* 1 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 6 */,
/* 7 */,
/* 8 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 9 */,
/* 10 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 11 */,
/* 12 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 13 */,
/* 14 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 15 */,
/* 16 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 17 */,
/* 18 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 19 */,
/* 20 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 21 */,
/* 22 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	        value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var initRem = function () {
	        function initRem() {
	                _classCallCheck(this, initRem);
	        }

	        _createClass(initRem, [{
	                key: 'init',

	                /**
	                 * @func
	                 * @desc 初始化rem
	                 */
	                value: function init() {
	                        var dpr = void 0,
	                            rem = void 0,
	                            scale = void 0,
	                            docEl = document.documentElement,
	                            fontEl = document.createElement('style'),
	                            metaEl = document.querySelector('meta[name="viewport"]');

	                        dpr = window.devicePixelRatio || 1;
	                        rem = docEl.clientWidth * dpr / 10;
	                        scale = 1 / dpr;

	                        // 设置viewport，进行缩放，达到高清效果
	                        metaEl.setAttribute('content', 'width=' + dpr * docEl.clientWidth + ',initial-scale=' + scale + ',maximum-scale=' + scale + ', minimum-scale=' + scale + ',user-scalable=no');

	                        // 设置data-dpr属性，留作的css hack之用
	                        docEl.setAttribute('data-dpr', dpr);

	                        // 动态写入样式
	                        docEl.firstElementChild.appendChild(fontEl);
	                        fontEl.innerHTML = 'html{font-size:' + rem + 'px!important;}';

	                        // 给js调用的，某一dpr下rem和px之间的转换函数
	                        window.rem2px = function (v) {
	                                v = parseFloat(v);
	                                return v * rem;
	                        };
	                        window.px2rem = function (v) {
	                                v = parseFloat(v);
	                                return v / rem;
	                        };

	                        window.dpr = dpr;
	                        window.rem = rem;
	                }
	        }]);

	        return initRem;
	}();

		exports.default = initRem;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _jQuery = __webpack_require__(24);

	var _jQuery2 = _interopRequireDefault(_jQuery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _search = function _search() {
	    var search = (0, _jQuery2.default)('.search-no-focus span'),
	        // 搜索按钮
	    searchFocus = (0, _jQuery2.default)('.search-focus'),
	        searchInput = (0, _jQuery2.default)('.search-focus input'),
	        searchCancel = (0, _jQuery2.default)('.search-focus a'),
	        logo = (0, _jQuery2.default)('.logo');

	    if (!search || !searchFocus || !searchInput || !searchCancel || !logo) {
	        return;
	    }

	    // 绑定搜索按钮点击事件
	    search.bind('click', function () {
	        search.css('display', 'none');
	        searchFocus.css('visibility', 'visible');
	        logo.css('visibility', 'hidden');
	        searchInput.focus();
	    });

	    // 绑定搜索输入框的失去焦点事件
	    searchInput.bind('blur', function () {
	        search.css('display', 'block');
	        searchFocus.css('visibility', 'hidden');
	        logo.css('visibility', 'visible');
	    });

	    // 绑定搜索框的删除按钮
	    searchCancel.bind('click', function () {
	        search.css('display', 'block');
	        searchFocus.css('visibility', 'hidden');
	        logo.css('visibility', 'visible');
	    });
	};

	exports.default = _search;

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = jQuery;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _jQuery = __webpack_require__(24);

	var _jQuery2 = _interopRequireDefault(_jQuery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _mySlider = function _mySlider() {
	    var banner = (0, _jQuery2.default)('.banner'),
	        unslidersss = null;

	    if (banner.length === 0) {
	        return;
	    }

	    // 启动轮播插件
	    unslidersss = banner.unslider({
	        autoplay: true,
	        infinite: true,
	        arrows: false
	    });

	    //  Let's say we want to use $.getScript to load our scripts for some reason
	    var scripts = ['http://stephband.info/jquery.event.move/js/jquery.event.move.js', 'http://stephband.info/jquery.event.swipe/js/jquery.event.swipe.js'];

	    _jQuery2.default.getScript(scripts[0]);

	    //  Once our script is loaded, we can initSwipe to add swipe support
	    _jQuery2.default.getScript(scripts[1], function () {
	        banner.unslider('initSwipe');
	    });
	};

	exports.default = _mySlider;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _jQuery = __webpack_require__(24);

	var _jQuery2 = _interopRequireDefault(_jQuery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var newsLi = function newsLi(news) {
	    var tempDOM = '',
	        newsCount = news.length,
	        dayNews = null,
	        dayNewsCount = 0;

	    for (var i = 0; i < newsCount; i++) {
	        dayNews = news[i]; // 每天的新闻
	        dayNewsCount = dayNews.length;

	        tempDOM += '<section class="w_flash-day font-size-2 font-color-4 clear-f">';
	        tempDOM += '<ol class="fl w_time">';
	        tempDOM += '<li>' + format(dayNews[0].createTime, '年月日', 'cn') + '<em class="w_dot"></em></li>';
	        for (var j = 0; j < dayNewsCount; j++) {
	            tempDOM += '<li>' + format(dayNews[j].createTime, '月日 时:分', 'cn') + '<em class="w_dot"></em></li>';
	        }
	        tempDOM += '</ol>';

	        tempDOM += '<ul class="w_flash-detail fr">';
	        for (var k = 0; k < dayNewsCount; k++) {
	            tempDOM += '<li>';
	            tempDOM += '<h2 class="w_h2">';
	            tempDOM += '<a rel="nofollow" class="font-size-1 single-ellipsis">' + dayNews[k].title + '</a>';
	            tempDOM += '</h2>';
	            tempDOM += '<div class="multi-ellipsis">';
	            tempDOM += '<p class="font-size-4">' + dayNews[k].preinfo + '</p>';
	            tempDOM += '</div>';
	            tempDOM += '<a class="w_flash-btn font-size-4" href="' + dayNews[k].link + '" rel="nofollow">阅读原文</a>';
	            tempDOM += '</li>';
	        }
	        tempDOM += '</ul>';
	        tempDOM += '</section>';
	    }

	    return tempDOM;
	};

	var fashLi = function fashLi(articles, zixunType) {
	    var tempDOM = '',
	        articleCount = articles.length;

	    for (var i = 0; i < articleCount; i++) {
	        tempDOM += '<li class="listbox">';
	        tempDOM += '<a class="_image" href="news/' + zixunType[articles[i].type - 1] + '/' + articles[i].articleId + '.html">';
	        tempDOM += '<img src="' + articles[i].preimage + '" alt="' + articles[i].title + '" />';
	        tempDOM += '<span class="font-color-5">头条</span>';
	        tempDOM += '</a>';
	        tempDOM += '<div class="_text flex-1">';
	        tempDOM += '<a class="multi-ellipsis font-color-3" href="news/' + zixunType[articles[i].type - 1] + '/' + articles[i].articleId + '.html">';
	        tempDOM += '<h2>' + articles[i].title + '</h2>';
	        tempDOM += '</a>';
	        tempDOM += '<div>';
	        tempDOM += '<a class="tag" href="news/' + zixunType[articles[i].type - 1] + '/">';

	        switch (articles[i].type) {
	            case 1:
	                tempDOM += '时讯';
	                break;
	            case 2:
	                tempDOM += '观察';
	                break;
	            case 3:
	                tempDOM += '游戏';
	                break;
	            case 4:
	                tempDOM += '影视';
	                break;
	            default:
	                tempDOM += '';
	        }
	        tempDOM += '</a>';
	        tempDOM += '<span class="font-size-2">' + format(articles[i].createTime, 'yyyy年MM月dd日', 'en') + '</span>';
	        tempDOM += '</div>';
	        tempDOM += '</div>';
	        tempDOM += '</li>';
	    }

	    return tempDOM;
	};

	var format = function format(time, _format, lang) {
	    var t = new Date(time);
	    var tf = function tf(i) {
	        return (i < 10 ? '0' : '') + i;
	    };

	    if (lang === 'en') {
	        return _format.replace(/yyyy|MM|dd|HH|mm|ss/g, function (a) {
	            switch (a) {
	                case 'yyyy':
	                    return tf(t.getFullYear());
	                    break;
	                case 'MM':
	                    return tf(t.getMonth() + 1);
	                    break;
	                case 'mm':
	                    return tf(t.getMinutes());
	                    break;
	                case 'dd':
	                    return tf(t.getDate());
	                    break;
	                case 'HH':
	                    return tf(t.getHours());
	                    break;
	                case 'ss':
	                    return tf(t.getSeconds());
	                    break;
	            }
	        });
	    } else {
	        return _format.replace(/年|月|日|时|分|秒/g, function (a) {
	            switch (a) {
	                case '年':
	                    return tf(t.getFullYear()) + '年';
	                    break;
	                case '月':
	                    return tf(t.getMonth() + 1) + '月';
	                    break;
	                case '分':
	                    return tf(t.getMinutes());
	                    break;
	                case '日':
	                    return tf(t.getDate()) + '日';
	                    break;
	                case '时':
	                    return tf(t.getHours());
	                    break;
	                case '秒':
	                    return tf(t.getSeconds());
	                    break;
	            }
	        });
	    }
	};

	var _load_more = function _load_more() {
	    var wuRollLoad = document.getElementsByClassName('roll-load')[0];
	    if (!wuRollLoad) {
	        return;
	    }

	    document.getElementsByClassName('roll-load')[0].isEnd = 'false';

	    // modified by Nicholas 7/26/2016 改成点击加载更多
	    (0, _jQuery2.default)('.wu_load').bind('click', function (e) {
	        e.preventDefault();

	        // 点击加载更多的话，就不需要这个了
	        // var scrollHeight = $(document).scrollTop(), // 滚动条到顶部的垂直高度
	        //      browserHeight = $(window).height(), // 浏览器的高度
	        //      docHeight =  $(document).height(); // 页面的文档高度

	        var rollLoad = document.getElementsByClassName('roll-load')[0],
	            rollLoadIsEnd = rollLoad.isEnd,
	            hadLoadCount = rollLoad.getElementsByTagName('li').length,
	            wantToLoad = 5,
	            host = 'http://' + location.host,
	            // 不知道为什么要加上http://
	        pathType = location.pathname,
	            pathTypeArray = pathType.split('/'),
	            // add by Nicholas 8/5/2016,主要是锐彬修改了项目的目录结构
	        pathTypeArrayLength = pathTypeArray.length,
	            url = '',
	            flag = 0; // 标志是那个页面

	        // 这四个只是用来测试
	        // url = 'http://10.0.0.10:8080/json/type.do?index=' + hadLoadCount + '&num=' + wantToLoad + '&type=1';
	        // url = 'http://10.0.0.10:8080/json/article.do?index=' + hadLoadCount + '&num=' + wantToLoad;
	        // url = 'http://10.0.0.10:8080/json/kuaixun.do?index=' + hadLoadCount + '&num=' + wantToLoad;
	        // url = 'http://www.haikevr.com/json/kuaixun.do?index=2&num=5';

	        var zixunType = ["newsletter", "observation", "game", "movie"],
	            // add by 锐彬 8/5/2016，主要是修改了项目的目录结构
	        zixunTypeLength = zixunType.length;

	        if (pathTypeArrayLength === 3) {
	            // 资讯
	            hadLoadCount = rollLoad.getElementsByTagName('li').length;

	            url = host + '/json/article.do?index=' + hadLoadCount + '&num=' + wantToLoad;

	            flag = 2;
	        } else {
	            // 资讯页面下的几种分类，以及7*24快讯
	            if (pathType.indexOf("newsflash") > 0) {
	                // 快讯 7*24
	                hadLoadCount = rollLoad.getElementsByTagName('section').length;

	                url = host + '/json/kuaixun.do?index=' + hadLoadCount + '&num=' + wantToLoad;

	                flag = 3;
	            } else {
	                // 资讯下的分类
	                var type = pathTypeArray[pathTypeArrayLength - 2],
	                    typeKey = 0; // zixunType的下标

	                for (var i = 0; i < zixunTypeLength; i++) {
	                    if (type === zixunType[i]) {
	                        typeKey = i + 1;
	                        break;
	                    }
	                }

	                hadLoadCount = rollLoad.getElementsByTagName('li').length;

	                url = host + '/json/type.do?index=' + hadLoadCount + '&num=' + wantToLoad + '&type=' + typeKey;

	                flag = 1;
	            }
	        }

	        // if (pathType.indexOf("type.do") > 0) {
	        //     // 资讯下的分类
	        //     var type = location.href.split('?')[1].split('=')[1], // 去除?type=1，最后面的1这个值
	        //     hadLoadCount = rollLoad.getElementsByTagName('li').length;

	        //     url = host + '/json/type.do?index=' + hadLoadCount + '&num=' + wantToLoad + '&type=' + type;

	        //     flag = 1;
	        // } else if(pathType.indexOf("zixun.do") > 0) {
	        //     // 资讯
	        //     hadLoadCount = rollLoad.getElementsByTagName('li').length;

	        //     url = host + '/json/article.do?index=' + hadLoadCount + '&num=' + wantToLoad;

	        //     flag = 2;
	        // } else if (pathType.indexOf("flash.do") > 0) {
	        //     // 快讯 7*24
	        //     hadLoadCount = rollLoad.getElementsByTagName('section').length;

	        //     url = host + '/json/kuaixun.do?index=' + hadLoadCount + '&num=' + wantToLoad;

	        //     flag = 3;
	        // }

	        // 注意，后台传过来的json中bool型可能是字符串，而且!"false"的值是true
	        var wuLoading = (0, _jQuery2.default)('.wu_loading'),
	            wuLoad = (0, _jQuery2.default)('.wu_load');
	        if (rollLoadIsEnd === 'false') {
	            wuLoading.css('display', 'block');
	            wuLoad.css('display', 'none');

	            _jQuery2.default.ajax({
	                url: url,
	                type: 'GET',
	                success: function success(data) {
	                    var jsonObj = JSON.parse(data),
	                        isEnd = jsonObj.isEnd,
	                        articles = null,
	                        kuaixuns = null,
	                        tempDOM = '';

	                    rollLoad.isEnd = isEnd;

	                    if (isEnd === 'true') {
	                        (0, _jQuery2.default)('.wu_is-end').css('display', 'block');
	                        (0, _jQuery2.default)('.wu_loading').css('display', 'none');
	                    } else {
	                        switch (flag) {
	                            case 1:
	                            case 2:
	                                articles = jsonObj.articles, tempDOM = fashLi(articles, zixunType); // modified by Nicholas 8/5/2016，主要是后台修改了目录结构，这里同步修改
	                                break;
	                            case 3:
	                                kuaixuns = jsonObj.kuaixuns, tempDOM = newsLi(kuaixuns);
	                                break;
	                            default:
	                                tempDOM = '';
	                        }
	                        wuLoading.before(tempDOM); // 在加载更多前面加入新增节点 
	                    }
	                },
	                error: function error() {
	                    rollLoad.isEnd = true;
	                },
	                complete: function complete() {
	                    wuLoading.css('display', 'none');
	                    wuLoad.css('display', 'block');
	                }
	            });
	        } else {
	            (0, _jQuery2.default)('.wu_is-end').css('display', 'block');
	            (0, _jQuery2.default)('.wu_loading').css('display', 'none');
	        }
	    });
	};

	exports.default = _load_more;

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map